(() => {
  const formSteps = document.querySelectorAll('.step');
  const nextButtons = document.querySelectorAll('.next-btn');
  const prevButtons = document.querySelectorAll('.prev-btn');

  const salarySelect = document.getElementById('salary');
  const educationSelect = document.getElementById('education');
  const propertySelect = document.getElementById('property');
  const landTypeGroup = document.getElementById('landTypeGroup');
  const landTypeSelect = document.getElementById('landType');

  propertySelect.addEventListener('change', () => {
    if (propertySelect.value === '5') {
      landTypeGroup.style.display = 'block';
    } else {
      landTypeGroup.style.display = 'none';
      landTypeSelect.value = '0';
    }
  });

  nextButtons.forEach(button => {
    button.addEventListener('click', () => {
      const currentStep = button.closest('.step');
      if (!validateStep(currentStep)) return;

      const nextStepNum = parseInt(button.getAttribute('data-next-step'), 10);
      goToStep(nextStepNum);
    });
  });

  prevButtons.forEach(button => {
    button.addEventListener('click', () => {
      const prevStepNum = parseInt(button.getAttribute('data-prev-step'), 10);
      goToStep(prevStepNum);
    });
  });

  function validateStep(step) {
    const inputs = step.querySelectorAll('select');
    for (const input of inputs) {
      if (!input.value) {
        alert('рдХреГрдкрдпрд╛ рд╕рднреА рдкреНрд░рд╢реНрдиреЛрдВ рдХреЗ рдЙрддреНрддрд░ рджреЗрдВ рддрд╛рдХрд┐ рдЖрдЧреЗ рдмрдврд╝рд╛ рдЬрд╛ рд╕рдХреЗред');
        return false;
      }
    }
    return true;
  }

  function goToStep(stepNumber) {
    formSteps.forEach(step => {
      step.classList.remove('active');
      if (parseInt(step.getAttribute('data-step'), 10) === stepNumber) {
        step.classList.add('active');
      }
    });
  }

  // Helper: Format Indian currency
  function formatINR(x) {
    let s = x.toFixed(0);
    let lastThree = s.slice(-3);
    let other = s.slice(0, -3);
    if (other !== '') lastThree = ',' + lastThree;
    return 'тВ╣' + other.replace(/\B(?=(\d{2})+(?!\d))/g, ",") + lastThree;
  }

  // Classification based on scores and logic
  function classifyBoy(inputs) {
    // Compute a weighted total score (simple aggregate)
    let score = 0;
    score += inputs.salaryScore * 5;           // max 25
    score += inputs.educationScore * 4;        // max 20
    score += inputs.propertyScore * 5;         // max 25
    score += inputs.landTypeScore * 3;          // max 12
    score += inputs.familySizeScore * 2;       // max 10
    score += inputs.govtJobScore * 3;           // max 15
    score += inputs.vehiclesScore * 3;          // max 15
    score += inputs.jewelryScore * 2;           // max 10
    score += inputs.attendeesScore;             // max 5
    score += inputs.travelWishScore * 2;        // max 10
    // Cooking skill multiplier
    if (inputs.cookingSkillScore === 5) score += 3;
    else if (inputs.cookingSkillScore === 3) score += 1;

    // Categorize by score thresholds (max ~135 approx)
    if (score >= 95) return 'legendary';
    if (score >= 65) return 'high';
    if (score >= 40) return 'moderate';
    return 'low';
  }

  // Generate dowry package based on classification
  function generatePackage(type, inputs) {
    let desc = "";
    let packageName = "";
    let jokes = [];

    switch(type) {
      case 'legendary':
        packageName = "ЁЯСС рд▓реАрдЬреЗрдВрдбрд░реА рд▓рдбрдХрд╛ рдкреИрдХреЗрдЬ";
        desc = `рддреБрдореНрд╣рд╛рд░реА рд╡реИрд▓реНрдпреВ рджреЗрдЦрддреЗ рд╣реБрдП рд▓рдбрд╝рдХреА рд╡рд╛рд▓реЗ рдкреВрд░реА рджреБрдирд┐рдпрд╛ рдХреА рджреМрд▓рдд рджреЗрдВрдЧреЗ!  
- рдЖрд▓реАрд╢рд╛рди рдорд╣рд▓ ЁЯП░  
- рд▓рдЧреНрдЬрд╝рд░реА рдХрд╛рд░реЛрдВ рдХрд╛ рдХрд▓реЗрдХреНрд╢рди ЁЯЪЧЁЯПОя╕П  
- рдХрд┐рд▓реЛ рд╕реЛрдиреЗ рдХреЗ рдЧрд╣рдиреЗ ЁЯТ░  
- рджреБрдирд┐рдпрд╛ рднрд░ рдХреА рд╣рдиреАрдореВрди рдЯреНрд░рд┐рдк тЬИя╕ПЁЯМН  
- рдкреВрд░реЗ рдкрд░рд┐рд╡рд╛рд░ рдХрд╛ рдЬрдпрдХрд╛рд░рд╛! ЁЯОЙ`;
        jokes.push("рднрд╛рдЧ рдЬрд╛ рд╡рд░рдирд╛ рд╢рд╛рджреА рдРрд╕реА рд╣реЛрдЧреА рдХрд┐ Netflix рдкрд░ рд╕реАрд░реАрдЬрд╝ рдмрдирд╛рдиреА рдкрдбрд╝реЗрдЧреАред");
        break;

      case 'high':
        packageName = "тЬи рд╣рд╛рдИ рд╡реИрд▓реНрдпреВ рдкреИрдХреЗрдЬ";
        desc = `рддреБрдореНрд╣рд╛рд░реА рдореЗрд╣рдирдд рд░рдВрдЧ рд▓рд╛рдИ! рд▓рдбрд╝рдХреА рд╡рд╛рд▓реЗ рджреЗрдВрдЧреЗ:  
- рд╢рд╛рдирджрд╛рд░ рдШрд░ рдпрд╛ рдЧрд╛рдВрд╡ рдореЗрдВ рдЬрдореАрди ЁЯПбЁЯМ┐  
- рдПрдХ рдпрд╛ рджреЛ рдХрд╛рд░ ЁЯЪЩЁЯЪЧ  
- рдЕрдЪреНрдЫрд╛ рдЦрд╛рд╕рд╛ рд╕реЛрдирд╛ 100-200 рдЧреНрд░рд╛рдо ЁЯТО  
- рд╡рд┐рджреЗрд╢реА рдпрд╛ рджреЗрд╢реА рд╣рдиреАрдореВрди рдЯреНрд░рд┐рдк тЬИя╕П  
- рдкрд░рд┐рд╡рд╛рд░ рд╕реЗ рдЦреВрдм рддреЛрд╣рдлреЗ ЁЯОБ`;
        jokes.push("рднрд╛рдИ рд╕рд╣реА рдХрджрдо рдЙрдард╛рдпрд╛, рдЕрдм рддреЛ DJ рдмрдЬрд╛рдирд╛ рдмрд╛рдХреА рд╣реИ!");
        break;

      case 'moderate':
        packageName = "ЁЯСМ рдордзреНрдпрдо рд╡реИрд▓реНрдпреВ рдкреИрдХреЗрдЬ";
        desc = `рдареАрдХрдард╛рдХ рд╣рд╛рд▓рд╛рдд рд╣реИрдВ рджреЛрд╕реНрдд, рддреЛрд╣рдлреЛрдВ рдореЗрдВ рдорд┐рд▓реЗрдЧрд╛:  
- рдЫреЛрдЯрд╛ рдШрд░ рдпрд╛ рдлреНрд▓реИрдЯ ЁЯПв  
- рдПрдХ рдХрд╛рд░ рдпрд╛ рдмрд╛рдЗрдХ ЁЯПНя╕П  
- рд╣рд▓реНрдХрд╛ рд╕реЛрдирд╛ рдпрд╛ рдЪрд╛рдБрджреА ЁЯТН  
- рд╕реНрдерд╛рдиреАрдп рдЯреНрд░рд┐рдк тЬИя╕П  
- рд╢рд╛рджреА рдореЗрдВ рдореЗрд╣рдорд╛рдиреЛрдВ рдХрд╛ рдЬреЛрд╢ ЁЯОЙ`;
        jokes.push("рдЬрд░рд╛ рдзреНрдпрд╛рди рд░рдЦрдирд╛, рд╡рд░рдирд╛ рджрд╛рджреА рдорд╛рдБ рдХрд╛ рдбрд╛рдВрд╕ рдЧрд╛рдпрдм рди рд╣реЛ рдЬрд╛рдП!");
        break;

      case 'low':
        packageName = "ЁЯШЕ рдмреЗрд╕рд┐рдХ рдкреИрдХреЗрдЬ";
        desc = `рднрд╛рдИ, рдХреЛрд╢рд┐рд╢ рддреЛ рдХреА рд▓реЗрдХрд┐рди:  
- рдШрд░ рдмрд╕ рдпрд╛рджреЛрдВ рдореЗрдВ ЁЯПЪя╕П  
- рдмрд╛рдЗрдХ рдЪрд▓рд╛рдУ рдпрд╛ рдкреИрджрд▓ рдЪрд▓реЛ ЁЯПНя╕ПЁЯЪ╢тАНтЩВя╕П  
- рдереЛрдбрд╝реЗ-рдмрд╣реБрдд рдЖрд╢реАрд░реНрд╡рд╛рдж рдФрд░ рдорд┐рдард╛рдИ ЁЯОВ  
- рд╣рдиреАрдореВрди? рд╕реЛрдЪрдирд╛ рднреА рдордд! ЁЯШД`;
        jokes.push("рд╢рд╛рджреА рдореЗрдВ рдЦреВрдм рдкрдХреЛрдбрд╝реЗ рдЦрд╛рдУ рдФрд░ рдордЬрд╝реЗ рд╕реЗ рдЬрд┐рдпреЛ!");
        break;
    }

    // Add some personalized comments based on inputs
    if (inputs.cookingSkillScore === 5) {
      jokes.push("ЁЯН│ рдЦрд╛рдирд╛ рдмрдирд╛рдиреЗ рдХрд╛ рдХрд╛рдо рддреБрдорд╕реЗ рдмреЗрд╣рддрд░ рдХреЛрдИ рдирд╣реАрдВ рдХрд░реЗрдЧрд╛!");
    } else if (inputs.cookingSkillScore === 1) {
      jokes.push("рддреБрдореНрд╣реЗрдВ рдЦрд╛рдирд╛ рдмрдирд╛рдирд╛ рд╕реАрдЦрдирд╛ рдкрдбрд╝реЗрдЧрд╛ рднреИрдпрд╛, рд╡рд░рдирд╛ рдореБрд╢реНрдХрд┐рд▓ рд╣реЛрдЧреАред");
    }

    if (inputs.govtJobScore === 5) {
      jokes.push("рд╕рд░рдХрд╛рд░реА рдиреМрдХрд░реА рд╡рд╛рд▓реЗ рд╣реЛ, рдЖрд╢реНрд░рдо рдХреА рд╢рд╛рдВрддрд┐ рдЬреИрд╕реА рд╢рд╛рджреА рд╣реЛрдЧреАред");
    } else {
      jokes.push("рд╕рд░рдХрд╛рд░реА рдиреМрдХрд░реА рдирд╣реАрдВ рддреЛ рдХреБрдЫ рддреЛ рдЦрдЯрдкрдЯ рддреЛ рд╣реЛрдЧреА рд╣реАред ЁЯШЬ");
    }

    return {
      packageName,
      desc,
      jokes
    };
  }

  document.getElementById('calculateBtn').addEventListener('click', (e) => {
    e.preventDefault();

    if (!validateStep(document.querySelector('.step.active'))) return;

    const salaryScore = +salarySelect.value;
    const educationScore = +educationSelect.value;
    const propertyScore = +propertySelect.value;
    const landTypeScore = +landTypeSelect.value || 0;
    const familySizeScore = +document.getElementById('familySize').value;
    const govtJobScore = +document.getElementById('parentsJob').value;
    const vehiclesScore = +document.getElementById('vehicles').value;
    const jewelryScore = +document.getElementById('jewelry').value;
    const attendeesScore = +document.getElementById('attendees').value;
    const travelWishScore = +document.getElementById('travelWish').value;
    const cookingSkillScore = +document.getElementById('cookingSkill').value;

    const inputs = {
      salaryScore, educationScore, propertyScore, landTypeScore,
      familySizeScore, govtJobScore, vehiclesScore, jewelryScore,
      attendeesScore, travelWishScore, cookingSkillScore
    };

    const classification = classifyBoy(inputs);

    // Calculate simplified total dowry approximation (for display)
    const approxDowry = 
      salaryScore * 50000 +
      educationScore * 20000 +
      propertyScore * 50000 +
      landTypeScore * 30000 +
      familySizeScore * 10000 +
      govtJobScore * 30000 +
      vehiclesScore * 20000 +
      jewelryScore * 25000 +
      attendeesScore * 10000 +
      travelWishScore * 20000;

    const { packageName, desc, jokes } = generatePackage(classification, inputs);

    const jokesHTML = jokes.map(j => `<p style="font-style: italic; color: #7a5c33;">тАв ${j}</p>`).join('');

    const finalHTML = `
      <h2>рдЖрдкрдХрд╛ рдбрд╛рдЙрд░реА рдкреИрдХреЗрдЬ: <span style="color: #d35400;">${packageName}</span></h2>
      <p style="white-space: pre-line; font-size: 1.2rem; margin-top: 15px;">${desc}</p>
      ${jokesHTML}
      <h3 style="margin-top: 20px;">рдЕрдиреБрдорд╛рдирд┐рдд рдХреБрд▓ рдбрд╛рдЙрд░реА рдореВрд▓реНрдп: ${formatINR(approxDowry)}</h3>
    `;

    document.getElementById('dowryOutput').innerHTML = finalHTML;
    document.getElementById('formSteps').style.display = 'none';
    document.getElementById('result').style.display = 'flex';
  });

  document.getElementById('restartBtn').addEventListener('click', () => {
    document.getElementById('result').style.display = 'none';
    document.getElementById('formSteps').style.display = 'block';
    goToStep(1);
    document.querySelectorAll('select').forEach(sel => sel.value = '');
    landTypeGroup.style.display = 'none';
  });

})();